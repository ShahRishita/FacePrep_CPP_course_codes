Magic square
A magic square is an arrangement of numbers (usually integers) in a square grid, there numbers in the forward and backward main diagonals, all add up to the same number. Write a program to find whether a given matrix is a magic square or not.

Input Format:
The input consists of (n*n+1) integers. 
The first integer corresponds to the number of rows/columns in the matrix. 
The remaining integers correspond to the elements in the matrix. 
The elements are read in row-wise order, the first row first, then second row and so on. 
Assume that the maximum value of m and n is 5.

Output Format:
Print yes if it is a magic square. Print no if it is not a magic square.

Sample Input:
2
4 5
5 4

Sample Output:
No

Input (stdin)
2
4 5
5 4

Output (stdout)
No

Input (stdin)
4
1 2 3 4
5 6 7 8
9 10 11 12

Output (stdout)
No

Input (stdin)
3
1 2 3
3 1 2
2 3 1

Output (stdout)
No

PROGRAM IN CPP

#include <iostream>
using namespace std;

int main() 
{
  int rc, FD_sum = 0, BD_sum = 0;
  cin>>rc;
  int matrix[rc][rc];
  for(int i=0;i<rc;i++)
    for(int j=0;j<rc;j++)
    {
      cin>>matrix[i][j];
      if(i==j)
        FD_sum += matrix[i][j];
    }
  for(int i=0,j=rc-1;i<rc && j>=0; i++,j--)
  {
   BD_sum += matrix[i][j];
  }
  if(FD_sum == BD_sum)
    cout<<"Yes";
  else
    cout<<"No";
  return 0;
}
